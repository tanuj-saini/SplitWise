# Application Configuration
app:
  image: tanujsaini/splitwisetest1
  containerPort: 
  service:
    type: NodePort
    port: 7070
    nodePort: 30080
  env:
   
    PORT: "7070"
    MONGO_URL: "mongodb+srv://medeaszzz:YVZdlBODuGtzQwPf@cluster0.ijdak.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
    CORS_ORIGIN: "*"
    ACCESS_TOKEN_SECRET: "1234567890"
    REFRESH_TOKEN_SECRET: "0987654321"
    ACCESS_TOKEN_EXPIRY: "1d"
    REFRESH_TOKEN_EXPIRY: "10d"
    REDIS_HOST: "caching-3003077a-lokhanderohit2020-0d67.f.aivencloud.com"
    REDIS_PORT: "20071"
    REDIS_USERNAME: "default"
    REDIS_PASSWORD: "AVNS_EfTD1r7Qtv0lh9cvkXX"
    KAFKA_BROKER: "kafka-cc0288c-lokhanderohit2020-0d67.f.aivencloud.com:20084"
    KAFKA_SASL_USERNAME: "avnadmin"
    KAFKA_SASL_PASSWORD: "AVNS_k5Y-uXYXw3Qb6hrsw_v"
    KAFKA_SSL_CA_PATH: "/usr/src/app/ca.cer"
    
    # Add other environment variables from your .env file here
  app:
  image: tanujsaini/splitwisetest1
  service:
    type: NodePort
    port: 7070
    nodePort: 30080
  volume:
    enabled: true
    hostPath: /mnt/splitwise  # Changed to match minikube mount point  # Path to your Node.js app root

# values.yml (corrected)
prometheus:
  server:
    persistentVolume:
      enabled: false
    configMapReload:
      enabled: true
    extraArgs:
      web.enable-lifecycle: ""
      web.enable-admin-api: "true"  # Needs explicit value
    serverFiles:
      prometheus.yml:
        global:
          scrape_interval: 15s
          evaluation_interval: 15s
        scrape_configs:
          - job_name: 'split-wise'
            static_configs:
              - targets: ['splitwise-242x.onrender.com']
            scheme: http
            metrics_path: /metrics
    service:
      type: NodePort
      nodePort: 30190
# Grafana Configuration
grafana:
  service:
    type: NodePort
    port: 3000
    nodePort: 30300
  adminUser: admin
  adminPassword: admin
  persistence:
    enabled: false
kafka:
    certPath: "/usr/src/app/ca.cer"